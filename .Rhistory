require(devtools)
require(roxygen2)
create_package("pbcm")
q()
require(devtools)
require(roxygen2)
document(); build(); check()
?txtProgressBar
document(); build(); check(); install()
document(); build(); check(); install(); require(pbcm)
document(); build(); check(); install(); require(pbcm)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, pars=list(a=1, b=2, c=2), reps=10)
document(); build(); check(); install(); require(pbcm)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=list(a=1, b=2, c=2), genargs2=list(d=2, e=1212), reps=10)
document(); build(); check(); install(); require(pbcm)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=list(a=1, b=2, c=2), genargs2=list(d=2, e=1212), reps=10)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=list(a=1, b=2, d=2), genargs2=list(d=2, e=1212), reps=10)
erkki <- pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=list(a=1, b=2, d=2), genargs2=list(d=2, e=1212), reps=10)
erkki$d
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=list(a=1, b=2, d=2), genargs2=list(d=2, e=1212), reps=10)
document(); build(); check(); install(); require(pbcm)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=list(a=1, b=2, d=2), genargs2=list(d=2, e=1212), reps=10)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=list(a=1, b=2, d=2), genargs2=list(d=2), reps=10)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=list(a=1, b=2, d=2), genargs2=NULL, reps=10)
length(NULL)
0:1
document(); build(); check(); install(); require(pbcm)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=list(a=1, b=2, d=2), genargs2=list(d=2), reps=10)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=list(a=1, b=2, d=2), genargs2=NULL, reps=10)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=NULL, genargs2=NULL, reps=10)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=NULL, genargs2=list(a=1), reps=10)
document(); build(); check(); install(); require(pbcm)
q()
document(); build(); check(); install(); require(pbcm)
require(devtools); require(roxygen2)
document(); build(); check(); install(); require(pbcm)
document(); build(); check(); install(); require(pbcm)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=NULL, genargs2=list(a=1), reps=10)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=list(a="esf"), genargs2=list(a=1), reps=10)
is.na(pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=list(a="esf"), genargs2=list(a=1), reps=10)[11,1])
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=list(a="esf"), genargs2=list(a=1), reps=10)
document(); build(); install(); require(pbcm)
?pbcm.du
document(); build(); install(); require(pbcm)
?pbcm.du
?pbcm.du
q()
require(devtools); require(roxygen2)
document(); build(); install(); require(pbcm)
?pbcm.du
document(); build(); install(); require(pbcm)
?pbcm.du
?pbcm.du
q()
require(devtools); require(roxygen2); document(); build(); install(); require(pbcm)
?pbcm.du
q()
require(devtools); require(roxygen2); document(); build(); install(); require(pbcm)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=list(a="esf"), genargs2=list(a=1), reps=10)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=NULL, genargs2=list(a=1), reps=10)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=NULL, genargs2=list(a=1), reps=3)
?pbcm.du
?message
?warning
NA - NA
2 - NA
NA -3
q()
require(devtools); require(roxygen2); document(); build(); install(); require(pbcm)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=NULL, genargs2=list(a=1), reps=3)
q()
require(devtools); require(roxygen2); document(); build(); install(); require(pbcm)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=NULL, genargs2=list(a=1), reps=3)
?pbcm.du
?pbcm.du
q()
require(devtools); require(roxygen2); document(); build(); install(); require(pbcm)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=NULL, genargs2=list(a=1), reps=3, GOFname="fsjf"9
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=NULL, genargs2=list(a=1), reps=3, GOFname="fsjf")
?pbcm.du
q()
require(devtools); require(roxygen2); document(); build(); install(); require(pbcm)
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=NULL, genargs2=list(a=1), reps=3, GOFname="fsjf")
pbcm.du(fun1=mean, fun2=mean, genfun1=mean, genfun2=mean, genargs1=NULL, genargs2=list(a=1), reps=3, GoFname="fsjf")
?pbcm.du
require(devtools); require(roxygen2); document(); build(); install(); require(pbcm)
require(devtools); require(roxygen2); document(); build(); install(); require(pbcm)
require(devtools); require(roxygen2); document(); build(); install(); require(pbcm)
?pbcm.du
require(devtools); require(roxygen2); document(); build(); install(); require(pbcm)
?empirical.GoF
require(devtools); require(roxygen2); document(); build(); install(); require(pbcm)
?empirical.GoF
is.integer(3.124)
is.integer(3)
?is.integer
?is.integer
require(devtools); require(roxygen2); document(); build(); check(); install(); require(pbcm)
require(devtools); require(roxygen2); document(); build(); check(); install(); require(pbcm)
q()
require(devtools); require(roxygen2); document(); build(); check(); install(); require(pbcm)
require(devtools); require(roxygen2); document(); build(); install(); require(pbcm)
require(devtools); require(roxygen2); document(); build();
require(devtools); require(roxygen2); document(); build();
require(devtools); require(roxygen2); document(); build();
require(devtools); require(roxygen2); document(); build();
require(devtools); require(roxygen2); document(); build();
require(devtools); require(roxygen2); document(); build();
require(devtools); require(roxygen2); document(); build();
require(devtools); require(roxygen2); document(); build();
?col.names
?names
grep(c("jou", "jau", "kou"), pattern="^j")
grepl(c("jou", "jau", "kou"), pattern="^j")
grep(c("jou", "jau", "kou"), pattern="^j")
c("jou", "jau")[grep(c("jou", "jau", "kou"), pattern="^j")]
require(devtools); require(roxygen2); document(); build();
require(devtools); require(roxygen2); document(); build();
?unique
unique(1,1,1,1,2,NA)
unique(c(1,1,1,1,2,NA))
unique(c(1,1,1,1,2,NA), na.rm=TRUE)
unique(c(1,1,1,1,2,NA))
!is.na(c(1,1,1,1,2,NA))
c(1,1,1,1,2,NA)[!is.na(c(1,1,1,1,2,NA))]
require(devtools); require(roxygen2); document(); build();
q()
require(devtools); require(roxygen2); document(); check(); build(); install()
require(devtools); require(roxygen2); document(); check(); build(); install()
require(devtools); require(roxygen2); document(); check(); build(); install()
require(devtools); require(roxygen2); document(); check(); build(); install()
q8)
q()
require(devtools); require(roxygen2); document(); build(); install()
require(devtools); require(roxygen2); document(); build(); install()
require(devtools); require(roxygen2); document(); build(); install()
require(devtools); require(roxygen2); document(); build(); install()
require(devtools); require(roxygen2); document(); build(); install()
require(devtools); require(roxygen2); document(); build(); install()
require(devtools); require(roxygen2); document(); build(); install()
require(devtools); require(roxygen2); document(); build(); install()
require(devtools); require(roxygen2); document(); build(); install()
require(devtools); require(roxygen2); document(); build(); install()
require(devtools); require(roxygen2); document(); build(); install()
require(devtools); require(roxygen2); document(); build(); install()
require(devtools); require(roxygen2); document(); build(); install()
require(devtools); require(roxygen2); document(); build(); install()
q8)
q()
require(devtools); require(roxygen2); document(); build()
q()
require(devtools); require(roxygen2)
document()
build()
q()
require(devtools)
require(roxygen2)
document()
build()
check()
install()
q()
require(devtools); require(roxygen2)
build_vignettes()
q()
devtools::build_vignettes()
q()
